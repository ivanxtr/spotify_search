{"version":3,"sources":["webpack:///./src/styles/index.styl?698d","styles/index.styl","helpers/API.js","components/SearchField.jsx","components/Genre.jsx","components/Playlist.jsx","components/Filters.jsx","App.js","serviceWorker.js","index.js"],"names":["content","module","i","options","transform","undefined","locals","exports","___CSS_LOADER_API_IMPORT___","push","APIController","_getToken","a","fetch","method","headers","btoa","clientId","body","result","json","data","access_token","_getGenres","token","categories","items","_getPlaylistByGenre","genreId","playlists","_getTracks","tracksEndPoint","_getTrack","artist","tracks","_search","param","artists","getToken","getGenres","getPlaylistByGenre","getTracks","getTrack","trackEndPoint","search","SearchField","submitSearch","searchValue","setSearchValue","className","onKeyPress","e","key","placeholder","value","type","onChange","target","onClick","Genre","showGenre","map","item","index","id","name","src","icons","url","alt","Playlist","showPlaylist","images","length","aria-label","error","playListView","Filters","filterData","filters","followers","filter","App","useState","setToken","genres","setGenres","setShowGenre","setShowPlaylist","playlist","setPlaylist","filtered","setFiltered","ApiController","genre","playlistData","searchResult","useEffect","sortedPlaylist","sort","b","total","popularity","Boolean","window","location","hostname","match","ReactDOM","hydrate","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2cca6fdc.chunk.js","sourcesContent":["\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/stylus-loader/dist/cjs.js!./index.styl\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/stylus-loader/dist/cjs.js!./index.styl\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/stylus-loader/dist/cjs.js!./index.styl\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body,html{font:12px/1.4 \\\"Lucida Grande\\\",Arial,sans-serif;background:#000;color:#ccc;margin:0;padding:0;width:100%;height:100%}section{display:flex;align-items:center;justify-content:center}.genre-container,.playlist-container{display:flex;justify-content:space-around;flex-wrap:wrap;width:80%;padding:30px 0 0 0}.genre{display:flex;flex-direction:column;padding:5px;cursor:pointer}.genre p{position:relative;top:80%;left:40%;font-weight:bold}.genre img{width:275px;height:275px}.playlist{display:flex;flex-direction:column;padding:5px;cursor:pointer;align-items:center}.playlist p{font-size:18px}.playlist img{width:275px;height:275px;border-radius:10px}.search-container{display:flex;flex-wrap:wrap;justify-content:center;align-items:center;padding:30px 0 0 0}.search-container .searchField{width:40%;padding:10px;margin-right:10px}@media screen and (max-width:1024px){.search-container .searchField{width:60%}}@media screen and (max-width:768px){.search-container .searchField{width:100%;margin-bottom:15px}}.search-container button{width:150px;height:50px;cursor:pointer;background-color:#000;border:solid 3px #3eb954;border-radius:8px;color:#3eb954;font-style:italic;font-size:15px}.filter-container{display:flex;justify-content:flex-start;flex-wrap:wrap;width:80%;margin-left:10%;margin-top:40px}.filter-container button{cursor:pointer;background-color:#000;border:none;color:#3eb954;font-style:italic;font-size:15px;outline:none}.filter-container button:hover{text-decoration:underline}.filter-order{width:100%;font-size:20px}input{background-color:#000;outline:none;border:none;border-bottom:1px solid #fff;color:#fff;font-size:50px}@media screen and (max-width:1024px){input{font-size:40px}}@media screen and (max-width:768px){input{font-size:30px}}nav .logo{margin-left:5%}nav .logo img{width:200px;margin-top:10px;cursor:pointer}footer{display:flex;justify-content:center;align-items:center;padding:40px;font-style:italic;font-size:14px}.hide{display:none}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","const APIController = (() => {\n    \n  const clientId = process.env.REACT_APP_Client_ID;\n  const clientSecret = process.env.REACT_APP_Client_Secret;\n\n  // private methods\n  const _getToken = async () => {\n\n      const result = await fetch('https://accounts.spotify.com/api/token', {\n          method: 'POST',\n          headers: {\n              'Content-Type' : 'application/x-www-form-urlencoded', \n              'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\n          },\n          body: 'grant_type=client_credentials'\n      });\n\n      const data = await result.json();\n      return data.access_token;\n  }\n  \n  const _getGenres = async (token) => {\n\n      const result = await fetch(`https://api.spotify.com/v1/browse/categories?locale=sv_US`, {\n          method: 'GET',\n          headers: { 'Authorization' : 'Bearer ' + token}\n      });\n\n      const data = await result.json();\n      return data.categories.items;\n  }\n\n  const _getPlaylistByGenre = async (token, genreId) => {\n\n      const limit = 10;\n      \n      const result = await fetch(`https://api.spotify.com/v1/browse/categories/${genreId}/playlists?limit=${limit}`, {\n          method: 'GET',\n          headers: { 'Authorization' : 'Bearer ' + token}\n      });\n\n      const data = await result.json();\n      return data.playlists.items;\n  }\n\n  const _getTracks = async (token, tracksEndPoint) => {\n\n      const limit = 10;\n\n      const result = await fetch(`${tracksEndPoint}?limit=${limit}`, {\n          method: 'GET',\n          headers: { 'Authorization' : 'Bearer ' + token}\n      });\n\n      const data = await result.json();\n      return data.items;\n  }\n\n  const _getTrack = async (token, artist) => {\n\n      const result = await fetch(`https://api.spotify.com/v1/search?q=${artist}&type=track&market=us`, {\n          method: 'GET',\n          headers: { 'Authorization' : 'Bearer ' + token}\n      });\n\n      const data = await result.json();\n      return data.tracks.items;\n  }\n\n  const _search = async (token, param) => {\n      const result = await fetch(`https://api.spotify.com/v1/search?q=${param}&type=artist&market=us`, {\n          method: 'GET',\n          headers: { 'Authorization' : 'Bearer ' + token}\n      });\n\n      const data = await result.json();\n      return data.artists.items;\n  }\n\n  return {\n      getToken() {\n          return _getToken();\n      },\n      getGenres(token) {\n          return _getGenres(token);\n      },\n      getPlaylistByGenre(token, genreId) {\n          return _getPlaylistByGenre(token, genreId);\n      },\n      getTracks(token, tracksEndPoint) {\n          return _getTracks(token, tracksEndPoint);\n      },\n      getTrack(token, trackEndPoint) {\n          return _getTrack(token, trackEndPoint);\n      },\n      search(token, param) {\n        return _search(token, param)\n      }\n  }\n})();\n\nexport default APIController\n","import React from 'react'\n\nfunction SearchField({ search, submitSearch, searchValue, setSearchValue }) {\n\n  return(\n    <>\n    <div className=\"search-container\" onKeyPress={(e) => submitSearch(e.key, searchValue)}>\n      <input\n          className=\"searchField\"\n          placeholder=\"Type your search\"\n          value={searchValue}\n          type=\"search\"\n          onChange={(e) => setSearchValue(e.target.value)} \n      />\n      <button onClick={() => search(searchValue)}>\n        <span> Search on Spotify </span>\n      </button>\n    </div>\n    </>\n  )\n}\n\nexport default SearchField\n","import React from 'react'\n\nfunction Genre({\n  data,\n  getPlaylistByGenre,\n  showGenre\n}) {\n\n  const genreView = () => {\n    return data.map((item, index) => (\n        <div\n        key={index}\n          className=\"genre\"\n          onClick={() => getPlaylistByGenre(item.id)}\n        >\n          <p>{ item.name }</p>\n          <img src={item.icons[0].url} alt={ item.name } />\n        </div>\n      )\n    )\n  }\n\n  return (\n    <>\n     <section>\n      <div className={showGenre ? \"genre-container\" : \"genre-container hide\"}>\n        { genreView() }\n      </div>\n     </section>\n    </>\n  )\n}\n\nexport default Genre\n","import React from 'react'\n\nfunction Playlist({ data, showPlaylist, getTrack }) {\n\n  const playListView = () => {\n    try {\n      return data.map((item, index) => (\n        <div\n        key={index}\n        className=\"playlist\"\n        onClick={() => getTrack(item.name)}\n        >\n          {\n            item.images.length > 0 ?\n              <img src={item.images[0].url} alt={ item.name } />\n              :\n              <img src=\"/empty-album.jpeg\" alt={item.name} aria-label={item.name} />\n          }\n          <p> {item.name} </p>\n        </div>\n      )\n    )\n    } catch (error) {\n      return error\n    }\n  }\n\n  return (\n    <>\n      <section>\n        <div className={ showPlaylist ? \"playlist-container\" : \"playlist-container hide\"}>\n          { playListView() }\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default Playlist\n","import React from 'react'\n\nconst Filters = ({ showPlaylist, data, filterData, filters }) => {\n\n  const genreFilters = () => {\n    return filters.map((filter, index) => (\n      <button \n      onClick={() => filterData(filter)}\n      key={index}> \n        {filter} \n      </button>\n    ))\n  }\n\n  return (\n    <>\n      {\n        data[0] && data[0].followers ?\n        <div className={ showPlaylist ? \"filter-container\"  : \"filter-container hide\" }>\n          <div className=\"filter-order\">\n            <p> Order By </p>\n          </div>\n          { genreFilters() }\n        </div>\n        :\n        <div></div>\n      }\n    </>\n  )\n}\n\nexport default Filters\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/index.styl\"\nimport ApiController from './helpers/API'\nimport SearchField from './components/SearchField'\nimport Genres from './components/Genre'\nimport Playlist from './components/Playlist'\nimport Filters from './components/Filters'\n\nfunction App() {\n\n  const [token, setToken] = useState('')\n  const [genres, setGenres] = useState([]);\n  const [showGenre, setShowGenre] = useState(true) \n  const [showPlaylist, setShowPlaylist] = useState(false)\n  const [playlist, setPlaylist] = useState([])\n  const [searchValue, setSearchValue] = useState('')\n  const [filters] = useState(['popularity','followers'])\n  const [filtered, setFiltered] = useState(false)\n\n  const getGenres = async ({ token }) => {\n    const genre = await ApiController.getGenres(token)\n    return setGenres(genre)\n  }\n\n  const getPlaylistByGenre = async (id) => {\n    const playlistData= await ApiController.getPlaylistByGenre(token, id)\n    setPlaylist(playlistData)\n    setShowGenre(false)\n    return setShowPlaylist(true)\n  }\n\n  const search = async (value) => {\n    if (value) {\n      const searchResult = await ApiController.search(token, value)\n      setShowGenre(false)\n      setShowPlaylist(true)\n      return setPlaylist(searchResult)\n    }\n    return false\n  }\n\n  const getTrack = async (url) => {\n    const getTrack = await ApiController.getTrack(token, url)\n    return getTrack\n  }\n\n  const homePage = () => {\n    setShowGenre(true)\n    setShowPlaylist(false)\n    setSearchValue('')\n    return setShowPlaylist(false)\n  }\n\n  const submitSearch = (e, value) => {\n    if (e === 'Enter') {\n      return search(value)\n    }\n    return false\n  }\n\n  const filterData = (value) => {\n    let sortedPlaylist = []\n    switch (value) {\n      case 'followers':\n        sortedPlaylist = playlist.sort((a,b) => b.followers.total - a.followers.total)\n        setPlaylist(sortedPlaylist)\n        return setFiltered(!filtered)\n      case 'popularity':\n        sortedPlaylist = playlist.sort((a,b) => b.popularity - a.popularity)\n        setPlaylist(sortedPlaylist)\n        return setFiltered(!filtered)\n      default:\n        return false\n    }\n  }\n\n  useEffect(() => {\n    const getToken = async () => {\n      const token = await ApiController.getToken()\n      setToken(token)\n      getGenres({ token })\n    }\n    getToken()\n  },[])\n\n  return (\n    <>\n      <div>\n        <nav>\n          <div className=\"logo\" onClick={() => homePage()}>\n            <img src=\"/spotify-logo.png\" alt=\"spotify brand\" />\n          </div>\n        </nav>\n        <SearchField\n          search={search}\n          submitSearch={submitSearch}\n          searchValue={searchValue}\n          setSearchValue={setSearchValue}\n        />\n        <Filters\n          showPlaylist={showPlaylist}\n          data={playlist}\n          filters={filters}\n          filterData={filterData}\n        />\n        <Genres\n          data={genres}\n          token={token}\n          getPlaylistByGenre={getPlaylistByGenre}\n          showGenre={showGenre}\n        />\n        <Playlist\n          data={playlist}\n          showPlaylist={showPlaylist}\n          getTrack={getTrack}\n        />\n        <footer>\n          all rigths reserved 2020\n        </footer>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.hydrate(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}